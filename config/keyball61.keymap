#define DEFAULT 0
#define SYM     1
#define FUN     2
#define MOUSE   3
#define SCROLL  4
#define SNIPE   5

#include <behaviors/mouse_keys.dtsi>
#include <dt-bindings/zmk/mouse.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

&nice_view_spi { cs-gpios = <&pro_micro 1 GPIO_ACTIVE_HIGH>; };

&lt {
    tapping-term-ms = <240>;
    flavor = "balanced";
    quick-tap-ms = <150>;
};

&mt {
    tapping-term-ms = <200>;
    flavor = "tap-preferred";
    quick-tap-ms = <150>;
};

&soft_off {
    hold-time-ms = <2000>; // Only turn off it the key is held for 5 seconds or longer.
};

/ {
    combos {
        compatible = "zmk,combos";

        right-reset {
            bindings = <&bootloader>;
            key-positions = <10 11>;
        };

        left-reset {
            bindings = <&bootloader>;
            key-positions = <0 1>;
        };

        soft_off {
            bindings = <&soft_off>;
            key-positions = <57 60>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            label = "QWRT";
            bindings = <
&kp GRAVE      &kp N1     &kp N2     &kp N3     &kp N4        &kp N5                                       &kp N6     &kp N7  &kp N8     &kp N9   &kp N0    &kp MINUS
&kp TAB        &kp Q      &kp W      &kp E      &kp R         &kp T                                        &kp Y      &kp U   &kp I      &kp O    &kp SEMI  &kp DELETE
&kp BACKSPACE  &kp A      &kp S      &kp D      &kp F         &kp G                                        &kp H      &kp J   &kp K      &kp L    &kp P     &kp SQT
&kp LCTRL      &kp Z      &kp X      &kp C      &kp V         &kp B      &kp A            &tog 1           &kp N      &kp M   &kp COMMA  &kp DOT  &kp FSLH  &kp EQUAL
&kp SPACE      &kp SPACE  &kp SPACE  &kp SPACE  &kp LEFT_ALT  &kp SPACE  &lt 2 RIGHT_ALT  &kp RIGHT_SHIFT  &kp ENTER                              &tog 5    &mkp LCLK
            >;
        };

        number_layer {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans                  &trans  &trans          &trans    &trans     &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                  &trans  &trans          &kp UP    &trans     &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                  &trans  &kp LEFT_ARROW  &kp DOWN  &kp RIGHT  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans          &trans    &trans     &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans                                       &trans  &trans
            >;

            label = "NUM";
        };

        symbol_layer {
            label = "SYM";
            bindings = <
&kp F11       &kp F1      &kp F2      &kp F3      &kp F4      &kp F5                              &kp F6    &kp F7     &kp F8        &kp F9         &kp F10   &kp F12
&kp ESC       &kp LG(N1)  &kp LG(N2)  &kp LG(N3)  &kp LG(N4)  &kp LG(N5)                          &kp HOME  &kp PG_UP  &kp UP_ARROW  &kp PAGE_DOWN  &kp END   &kp BSLH
&kp LEFT_WIN  &kp ESCAPE  &mkp RCLK   &mo 5       &mkp LCLK   &mkp MCLK                           &kp LBKT  &kp LEFT   &kp DOWN      &kp RIGHT      &kp RBKT  &kp INS
&kp LSHIFT    &kp LG(N6)  &kp LG(N7)  &kp LG(N8)  &kp LG(N9)  &kp LG(N0)  &bt BT_NXT  &bt BT_CLR  &trans    &trans     &trans        &trans         &trans    &kp RCTRL
&trans        &trans      &trans      &trans      &trans      &trans      &trans      &trans      &trans                                            &trans    &trans
            >;
        };

        function_layer {
            label = "FUN";
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans                  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans                          &trans  &trans
            >;
        };

        mouse_layer {
            label = "MOUSE";
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans                  &trans  &trans     &trans     &trans  &trans     &trans
&trans  &trans  &trans  &trans  &trans  &trans                  &trans  &trans     &trans     &trans  &trans     &trans
&trans  &trans  &trans  &trans  &trans  &trans                  &trans  &trans     &trans     &trans  &trans     &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &mkp MCLK  &mkp LCLK  &trans  &mkp RCLK  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans                                &trans     &trans
            >;
        };

        scroll_layer {
            label = "SCROLL";
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans                  &trans  &trans     &trans     &trans  &trans     &trans
&trans  &trans  &trans  &trans  &trans  &trans                  &trans  &trans     &trans     &trans  &trans     &trans
&trans  &trans  &trans  &trans  &trans  &trans                  &trans  &trans     &trans     &trans  &trans     &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &mkp MCLK  &mkp LCLK  &mo 4   &mkp RCLK  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans                                &trans     &trans
            >;
        };

        snipe_layer {
            label = "SNIPE";
            bindings = <
&bootloader  &trans  &trans  &trans  &trans  &trans                  &trans  &trans     &trans  &trans     &trans  &trans
&trans       &trans  &trans  &trans  &trans  &trans                  &trans  &trans     &trans  &trans     &trans  &trans
&trans       &trans  &trans  &trans  &trans  &trans                  &trans  &mkp LCLK  &mo 5   &mkp RCLK  &trans  &trans
&trans       &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans     &trans  &trans     &trans  &trans
&trans       &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans                                &trans  &trans
            >;
        };
    };
};

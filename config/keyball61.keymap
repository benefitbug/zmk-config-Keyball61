#define DEFAULT 0
#define SYM     1
#define FUN     2
#define MOUSE   3
#define SCROLL  4
#define SNIPE   5

#include <behaviors/mouse_keys.dtsi>
#include <dt-bindings/zmk/mouse.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

&nice_view_spi { cs-gpios = <&pro_micro 1 GPIO_ACTIVE_HIGH>; };

&lt {
    tapping-term-ms = <240>;
    flavor = "balanced";
    quick-tap-ms = <150>;
};

&mt {
    tapping-term-ms = <200>;
    flavor = "tap-preferred";
    quick-tap-ms = <150>;
};

&soft_off { split-peripheral-off-on-press; };

/ {
    combos {
        compatible = "zmk,combos";

        right-reset {
            bindings = <&bootloader>;
            key-positions = <51 59>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            label = "QWRT";
            bindings = <
&none  &none          &none         &none    &none      &none                                      &trans           &trans  &trans     &trans   &trans     &trans
&none  &kp SEMICOLON  &kp W         &kp E    &kp R      &kp T                                      &kp Y            &kp U   &kp I      &kp O    &kp SLASH  &trans
&none  &kp A          &kp S         &kp D    &kp F      &kp G                                      &kp H            &kp J   &kp K      &kp L    &kp P      &trans
&none  &kp Z          &kp X         &kp C    &kp V      &kp Q      &none            &none          &kp N            &kp M   &kp COMMA  &kp DOT  &kp B      &trans
&none  &kp LCTRL      &kp LEFT_ALT  &kp TAB  &kp ENTER  &kp SPACE  &lt 2 RIGHT_ALT  &kp BACKSPACE  &kp RIGHT_SHIFT                              &tog 1     &trans
            >;
        };

        number_layer {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans                  &trans  &trans          &trans    &trans     &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                  &trans  &trans          &kp UP    &trans     &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                  &trans  &kp LEFT_ARROW  &kp DOWN  &kp RIGHT  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans          &trans    &trans     &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans                                       &trans  &trans
            >;

            label = "NUM";
        };

        symbol_layer {
            label = "SYM";
            bindings = <
&trans  &trans            &trans            &trans            &trans            &trans                            &trans            &trans     &trans        &trans     &trans             &trans
&trans  &kp LG(NUMBER_1)  &kp LG(NUMBER_2)  &kp LG(NUMBER_3)  &kp LG(NUMBER_4)  &kp LG(N5)                        &kp LEFT_BRACKET  &kp MINUS  &kp UP_ARROW  &kp EQUAL  &kp RIGHT_BRACKET  &trans
&trans  &kp ESCAPE        &mkp RCLK         &mo 5             &mkp LCLK         &kp DEL                           &kp GRAVE         &kp LEFT   &kp DOWN      &kp RIGHT  &kp APOS           &trans
&trans  &kp NUMBER_1      &kp NUMBER_2      &kp NUMBER_3      &kp NUMBER_4      &kp N5      &none   &none         &kp NUMBER_6      &kp N7     &kp N8        &kp N9     &kp N0             &trans
&trans  &mo 3             &trans            &mkp MB3          &bt BT_CLR        &bt BT_NXT  &trans  &kp LEFT_GUI  &trans                                                &tog 5             &trans
            >;
        };

        function_layer {
            label = "FUN";
            bindings = <
&trans  &trans  &trans   &trans   &trans  &trans                  &trans  &trans  &trans  &trans  &trans   &trans
&trans  &trans  &trans   &trans   &trans  &trans                  &trans  &trans  &trans  &trans  &trans   &trans
&trans  &trans  &trans   &trans   &trans  &trans                  &trans  &trans  &trans  &trans  &trans   &trans
&trans  &kp F1  &kp F2   &kp F3   &kp F4  &kp F5  &trans  &trans  &kp F6  &kp F7  &kp F8  &kp F9  &kp F10  &trans
&trans  &trans  &kp F11  &kp F12  &trans  &trans  &trans  &trans  &trans                          &trans   &trans
            >;
        };

        mouse_layer {
            label = "MOUSE";
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans                  &trans  &trans     &trans     &trans  &trans     &trans
&trans  &trans  &trans  &trans  &trans  &trans                  &trans  &trans     &trans     &trans  &trans     &trans
&trans  &trans  &trans  &trans  &trans  &trans                  &trans  &trans     &trans     &trans  &trans     &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &mkp MCLK  &mkp LCLK  &trans  &mkp RCLK  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans                                &trans     &trans
            >;
        };

        scroll_layer {
            label = "SCROLL";
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans                  &trans  &trans     &trans     &trans  &trans     &trans
&trans  &trans  &trans  &trans  &trans  &trans                  &trans  &trans     &trans     &trans  &trans     &trans
&trans  &trans  &trans  &trans  &trans  &trans                  &trans  &trans     &trans     &trans  &trans     &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &mkp MCLK  &mkp LCLK  &mo 4   &mkp RCLK  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans                                &trans     &trans
            >;
        };

        snipe_layer {
            label = "SNIPE";
            bindings = <
&bootloader  &trans  &trans  &trans  &trans  &trans                  &trans  &trans     &trans  &trans     &trans  &trans
&trans       &trans  &trans  &trans  &trans  &trans                  &trans  &trans     &trans  &trans     &trans  &trans
&trans       &trans  &trans  &trans  &trans  &trans                  &trans  &mkp LCLK  &mo 5   &mkp RCLK  &trans  &trans
&trans       &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans     &trans  &trans     &trans  &trans
&trans       &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans                                &trans  &trans
            >;
        };
    };
};
